import time

def func(nums, prev=-1, i=0):
    if i == len(nums):
        return 0
    
    if prev == -1 or nums[i] > nums[prev]:
        return max(
            func(nums, i,    i+1) + 1,
            func(nums, prev, i+1)
        )
    else:
        return func(nums, prev, i+1)

def func_memo(nums, dp, prev=-1, i=0):
    if i < len(nums) and prev+1 < len(nums) and dp[i][prev+1] is not None:
        return dp[i][prev+1]
    
    if i == len(nums):
        return 0

    if prev == -1 or nums[i] > nums[prev]:
        dp[i][prev+1] = max(
            func_memo(nums, dp, i,    i+1) + 1,
            func_memo(nums, dp, prev, i+1)
        )

        return dp[i][prev+1]
    else:
        dp[i][prev+1] = func_memo(nums, dp, prev, i+1)

        return dp[i][prev+1]

def func_tabu(nums):
    n = len(nums)
    
    start = time.time()
    dp = [[None for _ in range(n+1)] for _ in range(n+1)]
    end = time.time()
    
    print("Array init time: %s", str(end - start))
    
    start = time.time()
    for prev in range(n+1):
        dp[-1][prev] = 0
    end = time.time()
        
    print("Base case fill in time: %s", str(end - start))
        
    start = time.time()
    for i in reversed(range(n)):
        for prev in range(n+1):
            if prev-1 == -1 or nums[i] > nums[prev-1]:
                dp[i][prev] = max(dp[i+1][i+1]+1, dp[i+1][prev])
            else:
                dp[i][prev] = dp[i+1][prev]
    end = time.time()
    
    print("Table fill in time: %s", str(end - start))
    
    return dp[0][0]
    
nums = [-895,651,679,894,-401,806,-1000,159,734,-515,-473,-320,362,592,-467,461,92,364,-971,604,82,332,-746,788,146,39,-729,16,437,537,-564,378,888,-219,-157,-970,-74,-938,-491,-514,968,121,-280,490,289,195,-159,774,-115,-692,249,-511,792,-116,-322,197,349,307,458,526,13,821,777,827,-651,351,311,-735,35,158,551,-207,-745,417,-29,-678,-126,-59,73,-562,-202,956,986,609,645,682,-35,-906,792,-790,221,164,539,628,238,810,438,-133,606,199,-922,-400,968,-211,81,-202,-416,239,-666,-788,-318,-162,-98,32,-569,-22,182,-897,-321,10,83,782,196,121,-925,868,441,-778,-50,331,618,-22,-59,477,-625,-936,507,-691,528,-635,325,-308,-969,-14,-513,-883,-793,-6,858,443,-49,-922,-20,-170,87,-975,-399,819,-712,-386,8,464,-486,454,199,931,-472,-366,-130,575,550,-831,-109,-67,-509,-253,797,-48,-602,-721,241,-923,14,-115,-473,683,807,-643,108,580,487,181,362,-164,-149,9,549,846,-10,431,-388,-901,77,-40,438,918,419,587,937,823,642,535,754,-26,-182,-478,704,-720,503,352,-934,444,947,576,632,566,1,32,-484,253,236,112,41,572,-87,-571,-707,-987,462,348,-65,-15,987,237,-209,-353,546,891,-333,838,401,828,601,523,-101,-579,-711,-543,-101,678,156,130,-209,-654,-304,-933,-271,-368,-933,-536,921,-925,-725,-874,555,-63,-335,-780,-351,587,875,-785,-913,-145,-415,531,210,968,-674,165,238,-835,-6,-680,-593,-574,821,909,-858,965,661,66,-636,-349,994,911,-73,257,-137,-514,220,8,636,-282,643,-8,961,71,275,-833,-611,-367,354,650,676,281,-93,-817,88,968,-356,-10,-907,118,180,607,979,-770,44,-100,135,-858,-814,-392,-931,-728,415,274,-141,98,747,-192,-632,370,-714,119,673,20,-936,-333,-961,-428,-982,100,-46,830,818,-53,-940,350,-413,336,-261,496,378,-753,-84,-775,-85,61,898,-100,-719,-950,633,-754,-78,39,-364,-979,-779,-573,-813,99,-793,-489,-874,-769,-525,316,947,-577,-120,-255,488,762,-183,-577,-396,-817,884,968,-975,20,773,-542,165,-607,897,731,-160,-767,-889,-701,-303,-783,788,915,-407,197,48,51,-400,-116,-978,897,-535,38,-925,-839,-75,-250,876,58,-598,361,721,263,23,-960,-824,816,-312,229,-650,389,-229,-29,397,-133,511,283,-852,-252,-466,-362,337,749,-479,641,-33,523,-500,-581,818,745,540,-823,-993,-423,16,-803,233,-410,-41,151,-328,-641,-550,-424,-497,-805,759,-368,658,-901,-437,561,-724,180,666,-430,-909,-69,842,141,-103,-838,963,-949,-7,-861,-826,597,-105,-349,-64,320,1,-286,990,504,-714,935,-934,-987,12,-44,-573,318,-613,401,-240,-390,-723,-354,-398,239,587,158,-989,31,825,825,812,-257,-844,-112,-555,895,-719,-892,565,322,609,213,574,914,-75,215,-601,-623,-330,-832,49,180,-517,-520,252,679,-509,-988,696,727,255,635,-390,-573,480,398,-216,301,129,-725,457,-885,-435,-387,404,253,-478,359,-886,510,789,412,300,-106,46,-687,-885,738,950,-272,-843,-290,328,418,-191,-195,199,-676,450,608,-261,508,665,301,502,492,896,734,896,140,777,599,-354,186,-468,-370,-12,-807,-963,-542,303,996,-864,645,-800,-102,-398,171,541,-329,733,-979,212,-971,-1,-480,732,61,476,-212,-276,85,-165,655,-972,-148,656,-129,-857,186,616,575,-857,-727,-334,52,433,365,845,-795,431,-889,-444,-884,212,824,728,939,694,-16,-656,153,412,834,163,138,272,-416,252,11,232,188,80,-559,-870,685,951,328,245,-306,493,844,-783,-866,157,-568,756,-380,-400,788,487,-206,315,52,646,470,54,505,-808,-259,-50,-581,908,-122,-856,249,989,-452,165,-890,877,448,280,350,869,-403,862,651,-118,203,-7,-259,319,-369,-613,-416,-105,-197,530,123,-454,404,-65,513,104,-648,769,-824,-677,274,899,646,851,-777,-122,250,-848,-136,476,-532,-965,-936,63,738,-800,-267,-696,-786,563,-673,199,733,-627,-757,-926,989,-278,-152,164,797,626,636,-597,54,673,-382,310,-344,266,238,292,244,145,600,442,152,-599,185,-887,256,406,810,-669,-83,708,-849,-273,-920,-733,64,701,72,949,878,-850,-165,71,-685,-985,-36,359,268,224,487,502,-280,239,582,437,-277,-376,498,-589,592,42,-251,181,845,806,-547,-712,-694,989,355,942,-515,-621,-368,144,-311,413,-365,-465,499,475,-293,-187,854,-102,-44,-707,261,604,84,-756,-467,-68,-563,-260,-957,-688,75,-995,149,-619,904,930,1,380,375,-992,66,-778,433,-770,134,-218,-494,800,-653,-309,600,-55,-869,-395,-815,945,-457,-143,297,925,599,564,396,733,735,-816,253,-985,544,74,533,792,115,-195,-606,679,183,-725,714,-460,250,972,857,291,999,652,399,-974,694,-408,85,517,-589,459,-354,145,440,-263,352,-925,-700,340,53,-623,303,67,-304,451,-320,226,-305,991,-590,-691,349,416,920,-697,-890,542,-96,661,376,824,-527,-4,570,393,984,-608,526,-90,430,-872,875,988,-330,929,161,320,988,-479,-666,-921,750,-491,-561,-672,403,-279,346,-575,-869,-574,-174,342,379,229,749,649,-674,-692,-522,-716,-402,618,784,37,-381,834,803,746,809,-624,529,513,-188,-162,-616,-823,697,-627,-334,-436,-828,-626,178,881,464,-262,142,700,-835,938,-119,-554,170,-967,340,-694,-663,7,-864,-46,805,409,-669,-482,-171,13,859,-639,310,-783,-403,691,421,444,-224,411,-176,-107,778,650,684,-25,-610,-485,44,442,150,447,335,-454,266,-937,419,972,-900,113,273,-687,-163,488,-309,-530,444,358,154,-197,800,-470,732,620,74,-716,263,475,-194,235,464,206,9,887,145,-551,109,716,-165,321,-772,-143,-669,63,268,-838,-175,233,-471,650,464,-113,625,799,-439,667,-797,96,-166,-338,872,-813,647,459,588,796,730,-701,755,641,28,-122,-59,-657,-831,127,-96,-563,861,-526,-985,882,905,796,129,683,634,-971,-519,-173,859,-123,-391,639,-537,-489,450,567,872,-880,-45,-432,724,-88,-367,107,-743,-732,736,-249,-726,-669,277,-535,350,627,-481,-160,-745,-847,-700,124,-189,-611,555,-83,-260,718,613,-915,593,-813,119,469,973,600,-246,-448,-987,-286,-139,447,176,65,-522,-897,-822,883,-873,-350,-268,946,564,-273,915,323,-626,106,-188,-905,-582,-244,879,-185,-199,831,-808,509,-197,-942,-635,532,799,584,615,-377,-118,-62,453,-179,540,-162,-916,611,-107,-338,-628,-457,739,-402,-805,-831,777,506,151,481,-601,964,-179,-835,174,192,-295,34,-282,-636,857,358,-953,646,-230,865,239,-997,-213,708,138,708,704,958,946,-116,-918,-823,159,206,-406,563,-207,-781,-905,960,810,-599,154,-43,825,803,-702,296,-731,573,194,-541,526,341,-651,-898,163,981,-55,-19,-6,640,997,953,-802,-602,-743,52,451,934,-224,324,311,-435,524,694,-566,-906,239,413,68,-27,171,845,-719,-206,853,993,287,-552,-267,-179,-960,504,-822,-552,-29,-664,-190,-889,781,437,341,-122,-135,-715,-779,-934,536,-638,31,43,173,-257,152,363,330,761,-620,885,250,-38,518,-606,582,-421,-162,-487,-979,-928,26,-787,-283,-750,77,-881,666,888,-486,77,463,-178,433,-667,61,144,882,-153,15,42,863,208,-259,747,221,825,-149,-425,716,-954,-534,-861,452,-213,-738,-272,-711,247,385,604,-907,479,338,-681,-894,-687,623,594,544,599,380,-897,682,505,702,535,945,271,218,9,-899,392,-869,996,800,-164,-883,555,-813,361,-809,-755,-997,-576,-473,451,-362,-319,-907,-788,231,-416,923,684,-552,-111,-28,292,-307,-773,-91,-35,793,59,-369,202,-710,-307,562,-8,-643,-301,645,-459,-423,-130,756,-196,291,-54,-728,-316,375,-701,568,-116,-654,742,920,36,281,-751]

func_tabu(nums)